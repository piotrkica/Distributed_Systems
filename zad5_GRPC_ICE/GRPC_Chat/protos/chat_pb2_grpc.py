# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos import chat_pb2 as protos_dot_chat__pb2


class ChatStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.send_msg = channel.unary_unary(
                '/grpc.Chat/send_msg',
                request_serializer=protos_dot_chat__pb2.Msg.SerializeToString,
                response_deserializer=protos_dot_chat__pb2.Empty.FromString,
                )
        self.receive_msg = channel.unary_stream(
                '/grpc.Chat/receive_msg',
                request_serializer=protos_dot_chat__pb2.Greeting.SerializeToString,
                response_deserializer=protos_dot_chat__pb2.Msg.FromString,
                )
        self.client_update = channel.unary_unary(
                '/grpc.Chat/client_update',
                request_serializer=protos_dot_chat__pb2.Greeting.SerializeToString,
                response_deserializer=protos_dot_chat__pb2.Empty.FromString,
                )


class ChatServicer(object):
    """Missing associated documentation comment in .proto file."""

    def send_msg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receive_msg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def client_update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'send_msg': grpc.unary_unary_rpc_method_handler(
                    servicer.send_msg,
                    request_deserializer=protos_dot_chat__pb2.Msg.FromString,
                    response_serializer=protos_dot_chat__pb2.Empty.SerializeToString,
            ),
            'receive_msg': grpc.unary_stream_rpc_method_handler(
                    servicer.receive_msg,
                    request_deserializer=protos_dot_chat__pb2.Greeting.FromString,
                    response_serializer=protos_dot_chat__pb2.Msg.SerializeToString,
            ),
            'client_update': grpc.unary_unary_rpc_method_handler(
                    servicer.client_update,
                    request_deserializer=protos_dot_chat__pb2.Greeting.FromString,
                    response_serializer=protos_dot_chat__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.Chat', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Chat(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def send_msg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.Chat/send_msg',
            protos_dot_chat__pb2.Msg.SerializeToString,
            protos_dot_chat__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def receive_msg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/grpc.Chat/receive_msg',
            protos_dot_chat__pb2.Greeting.SerializeToString,
            protos_dot_chat__pb2.Msg.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def client_update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.Chat/client_update',
            protos_dot_chat__pb2.Greeting.SerializeToString,
            protos_dot_chat__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
